{"interfaceLanguages":{"swift":[{"children":[{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/limn\/customlimnrepresentable\/customlimn(defaultlimn:context:)-6aw0b","title":"func customLimn(defaultLimn: () -> Limn, context: Limn.InitContext) -> Limn","type":"method"}],"title":"CustomLimnRepresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/limn\/customlimnrepresentable\/customlimn(defaultlimn:context:)-92odm","title":"func customLimn(defaultLimn: () -> Limn, context: Limn.InitContext) -> Limn","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/limn\/customlimnrepresentable\/customlimntypename-77kii","title":"static var customLimnTypeName: String","type":"property"}],"title":"CustomLimnRepresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/limn\/customlimnrepresentable\/customlimntypename-8h7ry","title":"static var customLimnTypeName: String","type":"property"}],"path":"\/documentation\/limn\/customlimnrepresentable","title":"CustomLimnRepresentable","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/limn\/filehandletextoutputstream\/init(filehandle:)","title":"init(fileHandle: FileHandle)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/limn\/filehandletextoutputstream\/write(_:)","title":"func write(String)","type":"method"}],"path":"\/documentation\/limn\/filehandletextoutputstream","title":"FileHandleTextOutputStream","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/limn\/keyedlimn\/init(_:_:)","title":"init(Limn, Limn)","type":"init"},{"path":"\/documentation\/limn\/keyedlimn\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/limn\/keyedlimn\/key","title":"let key: Limn","type":"property"},{"path":"\/documentation\/limn\/keyedlimn\/value","title":"let value: Limn","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/limn\/keyedlimn\/omitted(reason:)","title":"static func omitted(reason: Limn.OmittedReason) -> KeyedLimn","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/limn\/keyedlimn\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/limn\/keyedlimn\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/limn\/keyedlimn","title":"KeyedLimn","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/limn\/labeledlimn\/init(_:_:)","title":"init(String, Limn)","type":"init"},{"path":"\/documentation\/limn\/labeledlimn\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/limn\/labeledlimn\/label","title":"let label: String","type":"property"},{"path":"\/documentation\/limn\/labeledlimn\/value","title":"let value: Limn","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/limn\/labeledlimn\/omitted(label:reason:)","title":"static func omitted(label: String, reason: Limn.OmittedReason) -> LabeledLimn","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/limn\/labeledlimn\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/limn\/labeledlimn\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/limn\/labeledlimn","title":"LabeledLimn","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/init(rawvalue:)","title":"init(rawValue: UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/rawvalue","title":"let rawValue: UInt","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/all","title":"static var all: OptionalTypeNameComponents","type":"property"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/generictypeparameternames","title":"static var genericTypeParameterNames: OptionalTypeNameComponents","type":"property"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/modulename","title":"static var moduleName: OptionalTypeNameComponents","type":"property"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/nestingtypenames","title":"static var nestingTypeNames: OptionalTypeNameComponents","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/limn\/optionaltypenamecomponents\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/limn\/optionaltypenamecomponents\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/limn\/optionaltypenamecomponents\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/limn\/optionaltypenamecomponents\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/limn\/optionaltypenamecomponents","title":"OptionalTypeNameComponents","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/limn\/displaystyle\/class","title":"case `class`","type":"case"},{"path":"\/documentation\/limn\/displaystyle\/collection","title":"case collection","type":"case"},{"path":"\/documentation\/limn\/displaystyle\/dictionary","title":"case dictionary","type":"case"},{"path":"\/documentation\/limn\/displaystyle\/enum","title":"case `enum`","type":"case"},{"path":"\/documentation\/limn\/displaystyle\/optional","title":"case optional","type":"case"},{"path":"\/documentation\/limn\/displaystyle\/set","title":"case set","type":"case"},{"path":"\/documentation\/limn\/displaystyle\/struct","title":"case `struct`","type":"case"},{"path":"\/documentation\/limn\/displaystyle\/tuple","title":"case tuple","type":"case"},{"path":"\/documentation\/limn\/displaystyle\/value","title":"case value","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/limn\/displaystyle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/limn\/displaystyle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/limn\/displaystyle","title":"DisplayStyle","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/dumpformat\/init(maxitems:maxlinewidth:collectionindexminitems:typenamecomponents:symbols:)","title":"init(maxItems: Int, maxLineWidth: Int, collectionIndexMinItems: Int, typeNameComponents: OptionalTypeNameComponents, symbols: Limn.DumpSymbols)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/dumpformat\/collectionindexminitems","title":"var collectionIndexMinItems: Int","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpformat\/maxitems","title":"var maxItems: Int","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpformat\/maxlinewidth","title":"var maxLineWidth: Int","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpformat\/symbols","title":"var symbols: Limn.DumpSymbols","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpformat\/typenamecomponents","title":"var typeNameComponents: OptionalTypeNameComponents","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/dumpformat\/default","title":"static var `default`: Limn.DumpFormat","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/dumpformat\/json(minified:)","title":"static func json(minified: Bool) -> Limn.DumpFormat","type":"method"}],"path":"\/documentation\/limn\/limn\/dumpformat","title":"Limn.DumpFormat","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/classprefix","title":"var classPrefix: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/classsuffix","title":"var classSuffix: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/collectionindex","title":"var collectionIndex: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/collectionprefix","title":"var collectionPrefix: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/collectionsuffix","title":"var collectionSuffix: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/dictionaryempty","title":"var dictionaryEmpty: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/dictionaryprefix","title":"var dictionaryPrefix: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/dictionarysuffix","title":"var dictionarySuffix: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/diffinsertedlineprefix","title":"var diffInsertedLinePrefix: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/diffremovedlineprefix","title":"var diffRemovedLinePrefix: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/diffunchangedlineprefix","title":"var diffUnchangedLinePrefix: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/elementseparator","title":"var elementSeparator: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/enum","title":"var `enum`: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/enumwithavprefix","title":"var enumWithAVPrefix: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/enumwithavsuffix","title":"var enumWithAVSuffix: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/indentationcharacters","title":"var indentationCharacters: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/namevalueseparator","title":"var nameValueSeparator: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/nilvalue","title":"var nilValue: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/omittedmaxdepthexceeded","title":"var omittedMaxDepthExceeded: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/omittedrefcycledetected","title":"var omittedRefCycleDetected: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/omittedunresolved","title":"var omittedUnresolved: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/propertylabel","title":"var propertyLabel: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/setprefix","title":"var setPrefix: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/setsuffix","title":"var setSuffix: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/structprefix","title":"var structPrefix: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/structsuffix","title":"var structSuffix: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/summarydualentry","title":"var summaryDualEntry: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/summaryentryfiltered","title":"var summaryEntryFiltered: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/summaryentryskipped","title":"var summaryEntrySkipped: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/summaryentryunchanged","title":"var summaryEntryUnchanged: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/summarysingleentry","title":"var summarySingleEntry: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/tupleprefix","title":"var tuplePrefix: String","type":"property"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/tuplesuffix","title":"var tupleSuffix: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/dumpsymbols\/default","title":"static var `default`: Limn.DumpSymbols","type":"property"}],"path":"\/documentation\/limn\/limn\/dumpsymbols","title":"Limn.DumpSymbols","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/initcontext\/currentdepth","title":"let currentDepth: Int","type":"property"},{"path":"\/documentation\/limn\/limn\/initcontext\/maxdepth","title":"let maxDepth: Int","type":"property"},{"path":"\/documentation\/limn\/limn\/initcontext\/parentclassaddresses","title":"let parentClassAddresses: Set<String>","type":"property"}],"path":"\/documentation\/limn\/limn\/initcontext","title":"Limn.InitContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/sortoptions\/init(rawvalue:)","title":"init(rawValue: NSString.CompareOptions.RawValue)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/sortoptions\/rawvalue","title":"let rawValue: NSString.CompareOptions.RawValue","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/sortoptions\/caseinsensitive","title":"static var caseInsensitive: Limn.SortOptions","type":"property"},{"path":"\/documentation\/limn\/limn\/sortoptions\/numeric","title":"static var numeric: Limn.SortOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/sortoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/limn\/limn\/sortoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/sortoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/sortoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/limn\/limn\/sortoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/limn\/limn\/sortoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/limn\/limn\/sortoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/limn\/limn\/sortoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/limn\/limn\/sortoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/limn\/limn\/sortoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/limn\/limn\/sortoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/limn\/limn\/sortoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/limn\/limn\/sortoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/limn\/limn\/sortoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/sortoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/limn\/limn\/sortoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/sortoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/sortoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/limn\/limn\/sortoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/limn\/limn\/sortoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/limn\/limn\/sortoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/limn\/limn\/sortoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/limn\/limn\/sortoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/limn\/limn\/sortoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/limn\/limn\/sortoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/limn\/limn\/sortoptions","title":"Limn.SortOptions","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/stats\/diffedentriescount","title":"var diffedEntriesCount: Int","type":"property"},{"path":"\/documentation\/limn\/limn\/stats\/filteredentriescount","title":"var filteredEntriesCount: Int","type":"property"},{"path":"\/documentation\/limn\/limn\/stats\/maxdepth","title":"var maxDepth: Int","type":"property"},{"path":"\/documentation\/limn\/limn\/stats\/typenames","title":"var typeNames: Set<String>","type":"property"},{"path":"\/documentation\/limn\/limn\/stats\/unresolvedentriescount","title":"var unresolvedEntriesCount: Int","type":"property"}],"path":"\/documentation\/limn\/limn\/stats","title":"Limn.Stats","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/class(name:address:properties:)","title":"case `class`(name: String, address: String, properties: [LabeledLimn])","type":"case"},{"path":"\/documentation\/limn\/limn\/collection(elements:)","title":"case collection(elements: [Limn])","type":"case"},{"path":"\/documentation\/limn\/limn\/dictionary(keyvaluepairs:)","title":"case dictionary(keyValuePairs: [KeyedLimn])","type":"case"},{"path":"\/documentation\/limn\/limn\/enum(name:casename:associatedvalue:)","title":"case `enum`(name: String, caseName: String, associatedValue: Limn?)","type":"case"},{"path":"\/documentation\/limn\/limn\/omitted(reason:)","title":"case omitted(reason: Limn.OmittedReason)","type":"case"},{"path":"\/documentation\/limn\/limn\/optional(value:)","title":"case optional(value: Limn?)","type":"case"},{"path":"\/documentation\/limn\/limn\/set(elements:)","title":"case set(elements: [Limn])","type":"case"},{"path":"\/documentation\/limn\/limn\/struct(name:properties:)","title":"case `struct`(name: String, properties: [LabeledLimn])","type":"case"},{"path":"\/documentation\/limn\/limn\/tuple(elements:)","title":"case tuple(elements: [LabeledLimn])","type":"case"},{"path":"\/documentation\/limn\/limn\/value(description:)","title":"case value(description: String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/limn\/limn\/init(from:to:maxdepth:)","title":"init<T>(from: T, to: T, maxDepth: Int)","type":"init"},{"path":"\/documentation\/limn\/limn\/init(of:maxdepth:)","title":"init<V>(of: V, maxDepth: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/containsdiff","title":"var containsDiff: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/diffed(to:)","title":"func diffed<T>(to: T) -> Limn","type":"method"},{"path":"\/documentation\/limn\/limn\/dump(format:terminator:)","title":"func dump(format: Limn.DumpFormat, terminator: String)","type":"method"},{"path":"\/documentation\/limn\/limn\/dump(format:to:terminator:)","title":"func dump<T>(format: Limn.DumpFormat, to: inout T, terminator: String)","type":"method"},{"path":"\/documentation\/limn\/limn\/filtered(displaystyle:matchdepth:)","title":"func filtered(displayStyle: DisplayStyle, matchDepth: Int) -> Limn","type":"method"},{"path":"\/documentation\/limn\/limn\/filtered(value:matchdepth:)","title":"func filtered(value: String, matchDepth: Int) -> Limn","type":"method"},{"path":"\/documentation\/limn\/limn\/save(as:overwrite:)-4dmug","title":"func save(as: UInt64, overwrite: Bool) -> Bool","type":"method"},{"path":"\/documentation\/limn\/limn\/save(as:overwrite:)-ookz","title":"func save<S>(as: S, overwrite: Bool) -> Bool","type":"method"},{"path":"\/documentation\/limn\/limn\/sorted(order:options:)","title":"func sorted(order: Limn.SortOrder, options: Limn.SortOptions) -> Limn","type":"method"},{"path":"\/documentation\/limn\/limn\/stats()","title":"func stats() -> Limn.Stats","type":"method"},{"path":"\/documentation\/limn\/limn\/stringdump(format:)","title":"func stringDump(format: Limn.DumpFormat) -> String","type":"method"},{"path":"\/documentation\/limn\/limn\/undiffed(to:)","title":"func undiffed(to: Limn.UndiffDirection) -> Limn?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/subscript(_:)-5brwz","title":"subscript(Double) -> Limn?","type":"subscript"},{"path":"\/documentation\/limn\/limn\/subscript(_:)-7vho","title":"subscript<S>(S) -> Limn?","type":"subscript"},{"path":"\/documentation\/limn\/limn\/subscript(_:)-8rhpx","title":"subscript(Int) -> Limn?","type":"subscript"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/address(of:)","title":"static func address(of: AnyObject) -> String","type":"method"},{"path":"\/documentation\/limn\/limn\/clear(_:)-2c06b","title":"static func clear<S>(S) -> Bool","type":"method"},{"path":"\/documentation\/limn\/limn\/clear(_:)-5s2y2","title":"static func clear(Int64) -> Bool","type":"method"},{"path":"\/documentation\/limn\/limn\/clearall()","title":"static func clearAll() -> Int","type":"method"},{"path":"\/documentation\/limn\/limn\/diff(from:to:maxdepth:)","title":"static func diff<T>(from: T, to: T, maxDepth: Int) -> Limn","type":"method"},{"path":"\/documentation\/limn\/limn\/list()","title":"static func list() -> [String]?","type":"method"},{"path":"\/documentation\/limn\/limn\/load(_:)-2p69i","title":"static func load(UInt64) -> Limn?","type":"method"},{"path":"\/documentation\/limn\/limn\/load(_:)-lcm8","title":"static func load<S>(S) -> Limn?","type":"method"},{"path":"\/documentation\/limn\/limn\/typename(of:)","title":"static func typeName(of: Any) -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/omittedreason\/filtered","title":"case filtered","type":"case"},{"path":"\/documentation\/limn\/limn\/omittedreason\/maxdepthexceeded","title":"case maxDepthExceeded","type":"case"},{"path":"\/documentation\/limn\/limn\/omittedreason\/referencecycledetected","title":"case referenceCycleDetected","type":"case"},{"path":"\/documentation\/limn\/limn\/omittedreason\/unresolved","title":"case unresolved","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/omittedreason\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/omittedreason\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/limn\/limn\/omittedreason\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/limn\/limn\/omittedreason","title":"Limn.OmittedReason","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/sortorder\/ascending","title":"case ascending","type":"case"},{"path":"\/documentation\/limn\/limn\/sortorder\/descending","title":"case descending","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/sortorder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/limn\/limn\/sortorder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/limn\/limn\/sortorder","title":"Limn.SortOrder","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/undiffdirection\/original","title":"case original","type":"case"},{"path":"\/documentation\/limn\/limn\/undiffdirection\/update","title":"case update","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/undiffdirection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/limn\/limn\/undiffdirection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/limn\/limn\/undiffdirection","title":"Limn.UndiffDirection","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/limn\/limn\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/limn\/limn\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/limn\/limn","title":"Limn","type":"enum"}],"path":"\/documentation\/limn","title":"Limn","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}